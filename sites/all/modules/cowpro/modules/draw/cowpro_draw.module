<?php
define ( "TARE_MAX", "10000" );
define ("MAX_ISSUING_AMOUNT","10000");
function cowpro_draw_menu() {
	$items = array ();
	$items ['cowpro/draw'] = array (
			'title' => '红包抽奖',
			'description' => '红包抽奖',
			'page callback' => 'cowpro_draw_show',
			'access callback' => 'cowpro_draw_verified'
	);
	return $items;
}

/**
 * Implements hook_theme().
 */
function cowpro_draw_theme() {
	return array (
			'cowpro_draw_see' => array (
					'variables' => array (
							'items' => NULL,
					),
					'template' => 'cowpro-draw-see',
			),
	);
}
function cowpro_draw_show() {
	global $user;
	$items ['success'] = $_GET ['success'];
	$items ['issuing_id'] = intval ( $_GET ['nid'] );
	$items ['journal_id'] = intval ( $_GET ['journal_id'] );
	$journal_result = db_query ( "SELECT * FROM {cowpro_fund_journal} WHERE uid=" . $user->uid . " AND issuing_id=" . $items ['issuing_id'] . " AND journal_id=" . $items ['journal_id'] . " AND type='BID'" )->fetchAll ();
	$amount = $journal_result [0]->amount;
	$node = node_load ( $items ['issuing_id'] );
	$issuing = $node->field_issuing [LANGUAGE_NONE] [0];
	$loan_term = $issuing ['loan_term'];
	$rate = ($amount / 12) * ($loan_term / 30);

	if ($rate < TARE_MAX) {
		$html = theme ( 'cowpro_draw_see', array (
				'items' => $items,
				'winning' => null,
				'is_permissions' => 0,
		) );
		return $html;
	}

	$prize_arr = array (
			'0' => array (
					'id' => 1,
					'prize' => '20积分',
					'v' => 5,
					"type" => "points",
					"amount" => "20",
			),
			'1' => array (
					'id' => 2,
					'prize' => '50积分',
					'v' => 10,
					"type" => "points",
					"amount" => "50",
			),
			'2' => array (
					'id' => 10,
					'prize' => '100积分',
					'v' => 10,
					"type" => "points",
					"amount" => "100",
			),
			'3' => array (
					'id' => 4,
					'prize' => '20元代金券',
					'v' => 40,
					"type" => "voucher",
					"amount" => "20",
			),
			'4' => array (
					'id' => 5,
					'prize' => '50元代金券',
					'v' => 20,
					"type" => "voucher",
					"amount" => "50",
			),
			'5' => array (
					'id' => 6,
					'prize' => '100元代金券',
					'v' => 10,
					"type" => "voucher",
					"amount" => "100",
			),
			'6' => array (
					'id' => 7,
					'prize' => '谢谢参与！',
					'v' => 5,
					"type" => "",
					"amount" => "0",
			)
	);
	foreach ( $prize_arr as $key => $val ) {
		$arr [$val ['id']] = $val ['v'];
	}
	$rid = _cowpro_draw_get_rand ( $arr ); // 根据概率获取奖项id

	$res ['yes'] = $prize_arr [$rid - 1]; // 中奖项
	unset ( $prize_arr [$rid - 1] ); // 将中奖项从数组中剔除，剩下未中奖项
	shuffle ( $prize_arr ); // 打乱数组顺序
	for($i = 0; $i < count ( $prize_arr ); $i ++) {
		$pr [] = $prize_arr [$i];
	}
	$res ['no'] = $pr;

	$insert_data ['uid'] = $user->uid;
	$insert_data ['issuing_id'] = $items ['issuing_id'];
	$insert_data ['journal_id'] = $items ['journal_id'];
	$insert_data ['type'] = $res ['yes'] ['type'] == "voucher" ? 1 : 0;
	$insert_data ['amount'] = $res ['yes'] ['amount'];
	$insert_data ['created'] = time ();
	$insert_id = db_insert ( 'cowpro_draw' )->fields ( $insert_data )->execute ();
	$expirydate = time () + (10 * 3600 * 24);
	if ($insert_id) {
		if ($res ['yes'] ['type'] == "voucher") {
			$term = current ( taxonomy_get_term_by_name ( '代金券' ) );
			$params = array (
					'uid' => $user->uid,
					'points' => $res ['yes'] ['amount'],
					'description' => '投资后红包抽奖:' . $node->title,
					'display' => FALSE,
					'entity_type' => 'node',
					'entity_id' => $items ['issuing_id'],
					'tid' => $term->tid,
					'reference' => "draw",
					'expirydate' => $expirydate,
			);
		} else {
			$params = array (
					'uid' => $user->uid,
					'points' => $res ['yes'] ['amount'],
					'description' => '投资后红包抽奖:' . $node->title,
					'display' => FALSE,
					'entity_type' => 'node',
					'entity_id' => $items ['issuing_id'],
					'tid' => 0,
					'reference' => "draw",
					'expirydate' => $expirydate,
			);
		}
		userpoints_userpointsapi ( $params );
		$html = theme ( 'cowpro_draw_see', array (
				'items' => $items,
				'winning' => $res ['yes'],
				'is_permissions' => 1
		) );
		return $html;
	}
}
function cowpro_draw_verified() {
	global $user;
	$success = @$_GET ['success'];
	$issuing_id = @$_GET ['nid'];
	$journal_id = @$_GET ['journal_id'];

	if ($success && is_numeric ( $issuing_id ) && is_numeric ( $journal_id )) {
		$journal_result = db_query ( "SELECT * FROM {cowpro_fund_journal} WHERE uid=" . $user->uid . " AND issuing_id=" . $issuing_id . " AND journal_id=" . $journal_id . " AND type='BID'" )->fetchAll ();
		$result = db_query ( "SELECT * FROM {cowpro_draw} WHERE uid=" . $user->uid . " AND issuing_id=" . $issuing_id . " AND journal_id=" . $journal_id . "" )->fetchAll ();
		if (! $result && $journal_result) {
			return true;
		} else {
			return false;
		}
	} else {
		return false;
	}
}
function _cowpro_draw_get_rand($proArr) {
	$result = '';
	// 概率数组的总概率精度
	$proSum = array_sum ( $proArr );
	// 概率数组循环
	foreach ( $proArr as $key => $proCur ) {
		$randNum = mt_rand ( 1, $proSum );
		if ($randNum <= $proCur) {
			$result = $key;
			break;
		} else {
			$proSum -= $proCur;
		}
	}
	unset ( $proArr );
	return $result;
}

function test(){
    $array = array("666"=>20,"266"=>20,"366"=>20,"466"=>20,"166"=>20,);
    $data_array = array("2018-02-16","2018-02-17");
    foreach( $data_array as $v ){
        foreach( $array as $key=>$value ){
             for( $i=1; $i<=$value; $i++ ){
                    db_insert('cowpro_marketing')
                 ->fields(array(
                   'amount' => $key,
                   'date'  => $v
                 ))
                 ->execute();
             }
        }
    }
}

/**
 * Implements hook_user_login().
 */
function cowpro_draw_user_login(){
    // 判断是否在这三天之中
    $data_array = array("2018-02-15","2018-02-16","2018-02-17");
    if( !in_array(date("Y-m-d",time()), $data_array) ) {
        return ;
    }
    global $user;
    $uid = $user->uid;
    $role = user_role_load_by_name('administrator');
    if (user_has_role($role->rid, $user)) {
            return;
    }

    $date = date("Y-m-d",time());
    //判断cowpro_marketing表里是否有登陆之后发红包记录
    $result = db_query("SELECT id FROM {cowpro_marketing} WHERE uid=".$uid." AND date='".$date."' AND status=1 AND type != 2")->fetchAll(PDO::FETCH_ASSOC);
    $have_ponits = db_query("SELECT id FROM {cowpro_marketing} WHERE date='".$date."' AND status = 0 AND type = 0")->fetchAll(PDO::FETCH_ASSOC);

    if( $result ) {
        return;
    }

    if( empty($have_ponits) ) {
        $v = 0;
    }else{
        $v = 50;
    }

    	$prize_arr = array (
			'0' => array (
					'id' => 1,
					'prize' => '20积分',
					'v' => $v,
					"type" => "points",
					"amount" => "20",
			),
			'1' => array (
					'id' => 2,
					'prize' => '20代金券',
					'v' => 30,
					"type" => "voucher",
					"amount" => "20",
			),
			'2' => array (
					'id' => 3,
					'prize' => '30代金券',
					'v' => 15,
					"type" => "voucher",
					"amount" => "30",
			),
                        '3' => array (
					'id' => 4,
					'prize' => '50代金券',
					'v' => 5,
					"type" => "voucher",
					"amount" => "50",
			),

	);
	foreach ( $prize_arr as $key => $val ) {
		$arr [$val ['id']] = $val ['v'];
	}
	$rid = _cowpro_draw_get_rand ( $arr ); // 根据概率获取奖项id

	$res ['yes'] = $prize_arr [$rid - 1]; // 中奖项
	unset ( $prize_arr [$rid - 1] ); // 将中奖项从数组中剔除，剩下未中奖项
	shuffle ( $prize_arr ); // 打乱数组顺序
	for($i = 0; $i < count ( $prize_arr ); $i ++) {
		$pr [] = $prize_arr [$i];
	}
	$res ['no'] = $pr;

        if ($res ['yes'] ['type'] == "voucher") {
            // 获得代金券之后向cowpro_marketing表里插入一条记录，type=1为代金券。 为了判断每天用户只能获取一次代金券，或者红包的机会
             db_insert('cowpro_marketing')
             ->fields(array(
               'uid' => $uid,
               'type' => 1,
               'status' => 1,
               'amount' => $res['yes']['amount'],
               'created' => time(),
               'date'  => date("Y-m-d",time()),
             ))
             ->execute();

            $des = "元代金券";
            $term = current ( taxonomy_get_term_by_name ( '代金券' ) );
            $params = array (
                            'uid' => $uid,
                            'points' => $res ['yes'] ['amount'],
                            'description' => '过年登陆发代金券',
                            'display' => FALSE,
                            'entity_type' => 'node',
                            'entity_id' => "",
                            'tid' => $term->tid,
                            'reference' => "draw",
            );
        } else {
            $des = "元红包";
            $list = db_query("SELECT * FROM {cowpro_marketing} WHERE date='".$date."' AND status=0")->fetchAll(PDO::FETCH_ASSOC);

            $rand_id = array_rand($list);
            //获得红包之后更新cowpro_marketing表里对应的记录
            db_update('cowpro_marketing')
            ->fields(array('uid' => $uid,'status'=>1,"created"=>time()))
            ->condition('id', $list[$rand_id]['id'])
            ->execute();
            $res['yes']['amount'] = $list[$rand_id]['amount'] / 100;
            $term = current(taxonomy_get_term_by_name('奖金'));
            $params = array (
                        'uid' => $uid,
                        'points' => $list[$rand_id]['amount'],
                        'description' => '过年登陆发红包',
                        'display' => FALSE,
                        'entity_type' => 'node',
                        'entity_id' => "",
                        'tid' => $term->tid,
                        'reference' => "draw",
            );


    }
    userpoints_userpointsapi ( $params );

    drupal_set_message("过年有惊喜，恭喜你获得".$res['yes']['amount'].$des);
}

function cowpro_draw_cowpro_issuing_bid_finished($success, $nid, $journal_id) {
    $data_array = array("2018-02-15","2018-02-16","2018-02-17");
    if( !in_array(date("Y-m-d",time()), $data_array) ) {
        return ;
    }
    if( !$success ) return;
     global $user;
     $uid = $user->uid;

     $user_amount = db_query("SELECT amount FROM {cowpro_fund_journal} WHERE issuing_id=".$nid." AND uid=".$uid." AND type='BID' AND journal_id=".$journal_id)->fetchAll(PDO::FETCH_ASSOC);

    //投资小于10000 不发红包
    if( $user_amount[0]['amount'] < MAX_ISSUING_AMOUNT ) {
        return;
    }
    $date = date("Y-m-d",time());
    //判断cowpro_marketing 表里是否有投标之后发的红包记录， type=2为投资之后发红包
     $list = db_query("SELECT * FROM {cowpro_marketing} WHERE date='".$date."' AND status=1 AND type=2 AND uid=".$uid )->fetchAll(PDO::FETCH_ASSOC);
     if( !empty($list) ) {
         return;
     }else{
        $num = randomFloat(0.88,2.88);
        $amount  = round($num,2);

        $term = current(taxonomy_get_term_by_name('奖金'));
        $params = array (
                      'uid' => $uid,
                      'points' => intval($amount*100),
                      'description' => '过年投标发红包',
                      'display' => FALSE,
                      'entity_type' => 'node',
                      'entity_id' => "",
                      'tid' => $term->tid,
                      'reference' => "draw",
          );
            db_insert('cowpro_marketing')
            ->fields(array(
              'uid' => $uid,
              'type' => 2,
              'status' => 1,
              'amount' => $amount,
              'created' => time(),
              'date'  => date("Y-m-d",time()),
            ))
            ->execute();
        userpoints_userpointsapi ( $params );
        drupal_set_message("过年有惊喜，恭喜你投资成功之后获得".$amount."元红包");
     }
}

function randomFloat($min, $max) {
        return $min + mt_rand() / mt_getrandmax() * ($max - $min);
    }
