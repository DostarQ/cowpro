<?php
define("SIX_RATE", "10.20");
define("TWELVE_RATE", "10.80");

/*
*大额奖励说明，

*双季盈6个月                  年化率10.20%

*月累积大于等于10万小于20万   年化率10.44%
*月累积大于等于20万小于30万   年化率10.92%
*月累积大于等于30万小于40万   年化率11.40%
*月累积大于等于40万小于50万   年化率11.64%
*月累积大于等于50万           年化率11.88%

*年年富12个月                 年化率10.80%

*月累积大于等于10万小于20万   年化率11.28%
*月累积大于等于20万小于30万   年化率12.24%
*月累积大于等于30万小于40万   年化率13.20%
*月累积大于等于40万小于50万   年化率13.68%
*月累积大于等于50万           年化率14.16%
 * 
 * */
 



/**
 * Implementation of hook_menu()
 */
function cowpro_large_amount_rewards_menu() {
  $items['cowpro/rewards/issuing_large'] = array(
    'title' => '大额奖励明细',
    'description' => '',
    'page callback' => 'cowpro_large_amount_rewards_insert_issuing_large_data',
    'access arguments' => array(
      'configure p2p'
    ),
    'type' => MENU_NORMAL_ITEM
  );
  $items['cowpro/rewards/issuing_large_op'] = array(
    'title' => '大额奖励支付',
    'description' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'cowpro_large_amount_rewards_issuing_large_go_form'
    ),
    'access arguments' => array(
      'configure p2p'
    ),
    'file' => 'includes/rewards.issuing_large.inc',
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}

// 大额奖励报表
function cowpro_large_amount_rewards_insert_issuing_large_data() {
  // 上个月日期
  $rewards_date = date("Ym", mktime(0, 0, 0, date("m") - 1, 1, date("Y")));
  $result = db_query("SELECT f.amount as amount,i.field_issuing_loan_term as term,f.uid,f.issuing_id FROM {cowpro_fund_journal} as f LEFT JOIN {field_revision_field_issuing} as i ON f.issuing_id=i.entity_id WHERE f.type = 'BID' AND FROM_UNIXTIME( f.created, '%Y%m' ) = '" . $rewards_date . "' AND f.status =1 AND i.field_issuing_loan_term != 90")->fetchAll();
  $list = array();
  
  foreach ($result as $key => $item) {
    $array = array();
    $array = get_object_vars($item);
    $list[$item->uid][$item->term][] = $array;
  }
  
  foreach ($list as $key => $item) {
    foreach ($item as $_key => $_item) {
      $total_amount = 0;
      foreach ($_item as $__key => $__item) {
        $total_amount += $__item['amount'];
      }
      foreach ($_item as $__key => $__item) {
        $list[$key][$_key][$__key]['total_amount'] = $total_amount;
      }
      
      if ($total_amount < 100000) {
        unset($list[$key][$_key]);
      }
    }
    if (empty($list[$key][$_key])) {
      unset($list[$key]);
    }
  }
  
  foreach ($list as $key => $item) {
    foreach ($item as $_key => $_item) {
      foreach ($_item as $__key => $__item) {
        if ($_key == 180) {
          if ($__item['total_amount'] >= 100000 && $__item['total_amount'] < 200000) {
            $rewards_rate = 10.44;
            $rewards_level = 1;
          }
          else 
            if ($__item['total_amount'] >= 200000 && $__item['total_amount'] < 300000) {
              $rewards_rate = 10.92;
              $rewards_level = 2;
            }
            else 
              if ($__item['total_amount'] >= 300000 && $__item['total_amount'] < 400000) {
                $rewards_rate = 11.40;
                $rewards_level = 3;
              }
              else 
                if ($__item['total_amount'] >= 400000 && $__item['total_amount'] < 500000) {
                  $rewards_rate = 11.64;
                  $rewards_level = 4;
                }
                else 
                  if ($__item['total_amount'] >= 500000) {
                    $rewards_rate = 11.88;
                    $rewards_level = 5;
                  }
          $rewards_nominal = SIX_RATE;
          $list[$key][$_key][$__key]['rewards_amount'] = ($rewards_rate - $rewards_nominal) / 100 * $__item['amount'] / ($_key / 30) / 2;
        }
        else 
          if ($_key == 360) {
            if ($__item['total_amount'] >= 100000 && $__item['total_amount'] < 200000) {
              $rewards_rate = 11.28;
              $rewards_level = 1;
            }
            else 
              if ($__item['total_amount'] >= 200000 && $__item['total_amount'] < 300000) {
                $rewards_rate = 12.24;
                $rewards_level = 2;
              }
              else 
                if ($__item['total_amount'] >= 300000 && $__item['total_amount'] < 400000) {
                  $rewards_rate = 13.20;
                  $rewards_level = 3;
                }
                else 
                  if ($__item['total_amount'] >= 400000 && $__item['total_amount'] < 500000) {
                    $rewards_rate = 13.68;
                    $rewards_level = 4;
                  }
                  else 
                    if ($__item['total_amount'] >= 500000) {
                      $rewards_rate = 14.16;
                      $rewards_level = 5;
                    }
            $rewards_nominal = TWELVE_RATE;
            $list[$key][$_key][$__key]['rewards_amount'] = ($rewards_rate - $rewards_nominal) / 100 * $__item['amount'] / ($_key / 30);
          }
        
        $list[$key][$_key][$__key]['rewards_level'] = $rewards_level;
      }
    }
  }
  
  $last_month_date = db_query("SELECT * FROM {cowpro_rewards_issuing_large} WHERE issuing_date='" . $rewards_date . "'")->fetchAll();
  if (!$last_month_date) {
    foreach ($list as $key => $item) {
      foreach ($item as $_key => $_item) {
        foreach ($_item as $__key => $__item) {
          $count = $_key / 30;
          for ($i = 1; $i <= $count; $i++) {
            db_insert('cowpro_rewards_issuing_large')->fields(array(
              'uid' => $__item['uid'],
              'issuing_id' => $__item['issuing_id'],
              'rewards_date' => date("Ym", mktime(0, 0, 0, date("m") - 1 + $i, 1, date("Y"))),
              'rewards_amount' => $__item['rewards_amount'],
              'rewards_level' => $__item['rewards_level'],
              'issuing_date' => $rewards_date,
              'created' => time()
            ))->execute();
          }
        }
      }
    }
  }
  
  global $base_url;
  drupal_goto($base_url . "/cowpro_issuing_large");
}

/**
 * Implements hook_views_api().
 */
function cowpro_large_amount_rewards_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'cowpro_large_amount_rewards') . '/includes/views'
  );
}
