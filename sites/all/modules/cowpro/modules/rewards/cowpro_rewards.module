<?php

/**
 * Implementation of hook_menu()
 */
function cowpro_rewards_menu() {
	$items ['cowpro/rewards/check_in'] = array (
			'title' => '签到',
			'description' => '',
			'page callback' => 'cowpro_rewards_check_in',
			'page arguments' => array (),
			'access callback' => 'user_is_logged_in',
			'type' => MENU_NORMAL_ITEM,
	);
	$items ['cowpro/rewards/employee_registration'] = array (
			'title' => '员工登记',
			'description' => '',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					'cowpro_rewards_employee_registration_form'
			),
			'access arguments' => array (
					'access user profiles',
			),
			'file' => 'includes/rewards.employee_registration.inc',
			'type' => MENU_NORMAL_ITEM,
	);
	$items ['cowpro/rewards/february'] = array (
			'title' => '二月推荐奖励列表',
			'description' => '',
			'page callback' => 'cowpro_rewards_february',
			'access arguments' => array (
					'configure p2p',
			),
			'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

// 2018 2月推荐奖励
function cowpro_rewards_february() {
	$result = db_query ( "SELECT requester_id,requestee_id FROM {user_relationships} WHERE rtid=1" )->fetchAll ( PDO::FETCH_ASSOC );
	$list = array ();
	$bount1 = array ();
	$bount2 = array ();
	foreach ( $result as $value ) {
		$list [$value ['requestee_id']] [] = $value ['requester_id'];
	}

	foreach ( $list as $key => $value ) {

		$implode_string = implode ( ",", $list [$key] );
		$start_time = strtotime ( "2018-02-01 00:00:00" );
		$end_time = strtotime ( "2018-02-28 23:59:59" );
		$result_bid_count = db_query ( "SELECT distinct uid FROM {cowpro_fund_journal} WHERE type='BID' AND status=1 AND uid in(" . $implode_string . ") AND amount >= 10000 AND created>='" . $start_time . "' AND created<='" . $end_time . "'" )->fetchAll ( PDO::FETCH_ASSOC );

		$bount1 [$key] ['count'] = $result_bid_count [0] ['count'];
		$bount2_uid = db_query ( "SELECT requestee_id FROM {user_relationships} WHERE rtid=1 AND requester_id=" . $key )->fetchAll ( PDO::FETCH_ASSOC );
		if (! empty ( $bount2_uid )) {
			$bount2 [$bount2_uid [0] ['requestee_id']] ['count'] = $result_bid_count [0] ['count'];
		}
	}

	foreach ( $bount1 as $key => $value ) {
		$profile_real_name = cowpro_customer_profile_load_one_row_with_conditions ( $key, 'real_name' );
		if ($profile_real_name)
			$bount1 [$key] ['name'] = $profile_real_name->name;

		if ($value ['count'] - 2 > 0) {
			$bount1 [$key] ['amount'] = ($value ['count'] - 2) * 20;
			$bount1 [$key] ['voucher'] = ($value ['count'] - 2) * 30;
		} else {
			unset ( $bount1 [$key] );
		}
	}

	foreach ( $bount2 as $key => $value ) {

		if ($value ['count'] > 0) {
			$profile_real_name = cowpro_customer_profile_load_one_row_with_conditions ( $key, 'real_name' );
			if ($profile_real_name)
				$name = $profile_real_name->name;
			$bount2 [$key] ['amount'] = $value ['count'] * 10;
			$bount2 [$key] ['name'] = $name;
		} else {
			unset ( $bount2 [$key] );
		}
	}

	$html = theme ( 'cowpro_rewards_february', array (
			'bount1' => $bount1,
			'bount2' => $bount2,
	) );
	return $html;
}

/**
 * Implements hook_theme().
 */
function cowpro_rewards_theme() {
	return array (
			'cowpro_rewards_february' => array (
					'variables' => array (
							'bount1' => NULL,
							'bount2' => NULL
					),
					'template' => 'cowpro-rewards-february'
			)
	);
}
function cowpro_rewards_check_in() {
	$uid = $GLOBALS ['user']->uid;
	if (cowpro_rewards_have_checked_in ()) {
		drupal_set_message ( '您已经签过到了！', 'warning' );
		drupal_goto ();
		return;
	}

	db_merge ( 'cowpro_rewards_checkin' )->key ( array (
			'uid' => $uid
	) )->fields ( array (
			'uid' => $uid,
			'last_checkin' => time ()
	) )->execute ();

	$points = 1;
	$params = array (
			'uid' => $uid,
			'points' => $points,
			'description' => '签到奖励',
			'display' => FALSE,
			'tid' => 0
	) // 积分
;
	userpoints_userpointsapi ( $params );

	drupal_set_message ( '签到奖励积分1个！' );
	drupal_goto ();
	// return '欢迎签到';
}
function cowpro_rewards_have_checked_in() {
	$uid = $GLOBALS ['user']->uid;
	$start_time = mktime ( 0, 0, 0, date ( "n" ), date ( "j" ), date ( "Y" ) ); // 今天零时
	$query = db_select ( 'cowpro_rewards_checkin', 'checkin' )->fields ( 'checkin', array (
			'uid',
			'last_checkin'
	) )->condition ( 'uid', $uid )->condition ( 'last_checkin', $start_time, '>' );

	if ($query->execute ()->fetchObject ()) {
		return TRUE;
	} else {
		return FALSE;
	}
}

/*
 仅用于测试，当用户登录的时候，触发cowpro_fund_bid_finished event
 */
/*
function cowpro_rewards_user_login(&$edit, $account) {
	$uid = $GLOBALS ['user']->uid;
	if ($uid != 70041) {//只有用户 bigbug 登录的时候，才触发后面的逻辑
		return;
	}

	$issuing_id = 2500;
	$period = 1;
	$node = node_load($issuing_id);

	$repayment_schedules = array();
	$conditions = array (
			'issuing_id' => $issuing_id,
			'period' => $period,
			//'status' => 'WAITING_FOR',
	);
	$reset = FALSE;
	$schedules = entity_load ( 'cowpro_repayment_schedule', FALSE, $conditions, $reset );
	foreach ($schedules as $schedule) {
		if ($schedule->receiver_uid != -1) {
			$repayment_schedules[] = $schedule;
		}
	}

	rules_invoke_event('cowpro_fund_repayment_finished', TRUE, $node, $repayment_schedules);
 }
*/