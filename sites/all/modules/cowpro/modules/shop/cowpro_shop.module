<?php

define('COMMERCE_SERVICE_URL', 'http://shop.jinbeizeng.com/service/');

/**
 * Implements hook_menu().
 */
function cowpro_shop_menu() {
	$items = array ();
	$items ['shop'] = array (
			'title' => '积分商城',
			'description' => '用积分兑换商品',
			'page callback' => 'cowpro_shop_list',
			'access callback' => TRUE,
			//'menu_name' => 'navigation',
			'type' => MENU_NORMAL_ITEM,
			'weight' => 10
	);
	$items ['shop/detail/%'] = array (
			'title' => '积分商城',
			'description' => '用积分兑换商品',
			'page callback' => 'cowpro_shop_detail',
			'page arguments' => array(2),
			'access callback' => TRUE,
			//'menu_name' => 'navigation',
			'type' => MENU_NORMAL_ITEM,
			'weight' => 10
	);
	$items ['shop/buy/%/%'] = array (
			'title' => '兑换',
			'description' => '用积分兑换商品',
			'page callback' => 'cowpro_shop_buy',
			'page arguments' => array(2, 3),
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
			'weight' => 10
	);
	return $items;
}

/**
 * Implements hook_theme().
 */
function cowpro_shop_theme() {
	return array(
			'cowpro_commerce_list' => array(
					'variables' => array('list' => NULL),
					'file' => 'cowpro_shop.pages.inc',
					'template' => 'cowpro-commerce-list',
			),
			'cowpro_commerce_list_item' => array(
					'variables' => array('item' => NULL),
					'file' => 'cowpro_shop.pages.inc',
					'template' => 'cowpro-commerce-list-item',
			),
			'cowpro_commerce_item' => array(
					'variables' => array('item' => NULL),
					'file' => 'cowpro_shop.pages.inc',
					'template' => 'cowpro-commerce-item',
			),
	);
}

function cowpro_shop_list($page = 0) {
	$service = new WSClientServiceDescription();
	$service->name = 'commerce-kickstart';
	$service->label = 'commerce kickstart';
	$service->url = COMMERCE_SERVICE_URL;
	$service->type = 'rest';

	$operation = array();
	$operation['label'] = 'Index';
	$operation['url'] = 'entity_node';
	$operation['type'] = 'GET';
	$operation['parameter']['page'] = array('type' => 'integer', 'label' => 'Page NO.');
	//$operation['result'] = array('type' => 'node', 'label' => 'Node');
	$service->operations['index'] = $operation;
	$result = $service->index($page);

	$html = theme('cowpro_commerce_list', array('list' => $result));

	return $html;
}

function _cowpro_shop_retrieve_detail($nid) {
	$service = new WSClientServiceDescription();
	$service->name = 'commerce-kickstart';
	$service->label = 'commerce kickstart';
	$service->url = COMMERCE_SERVICE_URL;
	$service->type = 'rest';

	$operation = array();
	$operation['label'] = 'retrieve';
	$operation['url'] = 'entity_node/@nid';
	$operation['type'] = 'GET';
	$operation['parameter']['nid'] = array('type' => 'integer', 'label' => 'Node id');
	$operation['result'] = array('type' => 'node', 'label' => 'Node');
	$service->operations['retrieve'] = $operation;
	$result = $service->retrieve($nid);
	return $result;
}

function cowpro_shop_detail($nid) {
	$result = _cowpro_shop_retrieve_detail($nid);

	drupal_set_title($result['title']);
	$html = theme('cowpro_commerce_item', array('item' => $result));

	return $html;
}

function cowpro_shop_buy($nid, $vid) {
	$result = _cowpro_shop_retrieve_detail($nid);
	$found = FALSE;
	$title = NULL;
	$price = NULL;
	foreach ($result['products'] as $p) {
		if ($p['revision_id'] === $vid) {
			$found = TRUE;
			$title = $p['title'];
			$price = $p['commerce_price']['und'][0]['amount'];
			break;
		}
	}

	if (!$found) {
		drupal_set_message('没有找到所需商品！', 'error');
	} else {
		$qty = $_GET['qty'];
		_cowpro_shop_buy_item($nid, $vid, $title, $price, $qty);
	}
	return '';
}

function _cowpro_shop_buy_item($nid, $vid, $title, $price, $qty) {
	$qty = intval($qty);
	if ($qty <= 0) {
		drupal_set_message('要兑换的商品数量不正确！', 'error');
		return;
	}

	global $user;
	$points = userpoints_get_current_points($user->uid);
	$amount = ($price / 100) * $qty;
	if ($points < $amount) {
		drupal_set_message('积分不足！', 'error');
		return;
	}

	//$tid = _blackhat_leadsdata_get_user_points_tid();
	$desc = "(数量=$qty;nid=$nid;vid=$vid)$title";
	$params = array (
			'uid' => $user->uid,
			'points' => 0-$amount,
			'moderate' => false,
			'description' => $desc,
			'display' => false,
			//'tid' => $tid,
			'entity_id' => $nid,
			'entity_type' => 'order',
	);
	$result = userpoints_userpointsapi($params);
	if ($result['status']) {
		drupal_set_message('兑换申请已成功提交，我们的客服会与你联系！');
	} else {
		return drupal_set_message($result['reason'], 'error');
	}

}

function cowpro_shop_userpoints_list_transactions_alter(&$output) {
	$account = $output['#account'];
	$output['list']['summary_table'] = array(
			'#theme' => 'table',
			'#header' => array(
					array(
							'data' => '积分与奖金',
							'colspan' => 2,
					),
			),
			'#rows' => array(
					array(
							'data' => array('积分', userpoints_get_current_points($account->uid)),
							'class' => array('userpoints-myuserpoints-total-approved'),
					),
					array(
							'data' => array('奖金', userpoints_get_current_points($account->uid, _cowpro_get_user_points_money_tid())),
							'class' => array('userpoints-myuserpoints-total-approved'),
					),
			),
			'#weight' => 10,
			'#attributes' => array('class' => array('userpoints-myuserpoints-total')),
	);
}

define('COWPRO_USERPOINTS_MONEY', '奖金');
function _cowpro_get_user_points_money_tid()
{
	$term = current(taxonomy_get_term_by_name(COWPRO_USERPOINTS_MONEY));
	return $term->tid;
}

