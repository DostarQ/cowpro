<?php
const PAYMENT_PASSWORD_SMS_TEMPLATE = '您在“[site:name]”网站的手机验证码是[code]';

/**
 * Implementation of hook_menu()
 */
function payment_password_menu() {
	$items ['cowpro/payment-password-reset-by-sms-send-code'] = array (
			'title' => 'Payment Password Reset By SMS Send Code',
			'page callback' => 'payment_password_reset_by_sms_send_code',
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
	);

	$items ['admin/cowpro/config_payment_password'] = array (
			'title' => '手机找回密码短信模板',
			'description' => '设置手机找回支付密码的短信的内容',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					'payment_password_settings_form',
			),
			'access arguments' => array (
					'configure p2p',
			),
			'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

function payment_password_cowpro_customer_profile_payment_password_create($values) {
	$values += array(
			'password' => '',
			'plaintext' => FALSE,
	);
	return $values;
}

function payment_password_cowpro_customer_profile_payment_password_save($profile) {
	$data = array();
	if ($profile->password != '') {
		if ((!isset($profile->plaintext)) || $profile->plaintext) {
			$data['password'] = $profile->password;
			$data['plaintext'] = TRUE;
		} else {
			$data['password'] = md5($profile->password);
			$data['plaintext'] = FALSE;
		}
	} else {
		$data['password'] = '';
	}
	$profile->data = $data;
	return $profile;
}

function payment_password_cowpro_customer_profile_payment_password_load($profile) {
	$profile->password = $profile->data['password'];
	$profile->plaintext = $profile->data['plaintext'];
	return $profile;
}

function payment_password_cowpro_customer_profile_payment_password_form($form, &$form_state, $profile) {
	global $base_url;
	drupal_add_js(array('basePath' => $base_url), 'setting');
	drupal_add_js ( drupal_get_path ( 'module', 'payment_password' ) . '/payment_password.js' );

	$form['password'] = array(
			'#type' => 'textfield',
			'#title' => '支付密码',
			'#description' => '',
			'#maxlength' => 20,
			'#required' => TRUE,
			'#weight' => -10,
	);

	$form['password2'] = array(
			'#type' => 'textfield',
			'#title' => '请再次输入支付密码',
			'#maxlength' => 18,
			'#required' => TRUE,
			'#weight' => -5,
	);

	$form ['verify_code'] = array (
			'#type' => 'textfield',
			'#title' => '验证码',
			'#default_value' => '',
			'#maxlength' => 20,
			'#required' => FALSE,//在通过 registration_wizard 模块显示这个 form 的时候，用户有可能只是在向导翻页的时候路过
			'#weight' => 10,
	);

	$form ['send_verify'] = array (
			'#id' => 'send_verify',
			'#type' => 'button',
			'#value' => '发送验证码',
			'#attributes' => array (
					'class' => array (
							'send-verify-code',
					)
			),
			'#weight' => 20,
	);

	$form ['mobile_verify_help'] = array (
			'#markup' => '<div id=mobile_verify_help><p>验证码将被发送到您认证登记的手机中。</p></div>',
			'#weight' => 15,
	);
	return $form;
}

function payment_password_cowpro_customer_profile_payment_password_form_validate($form, &$form_state, $profile) {
	$validate_result = TRUE;
	if (!isset($_SESSION ['payment_password_mobile_number'])) {
		$validate_result = FALSE;
	}
	if (!isset($_SESSION ['payment_password_code'])) {
		$validate_result = FALSE;
	}

	$uid = $GLOBALS['user']->uid;
	$profile_mobile = cowpro_customer_profile_load_one_row_with_conditions($uid, 'mobile');
	if ($profile_mobile) {
		$mobile_number = $profile_mobile->mobile_number;
	}

	if ($validate_result && ($_SESSION ['payment_password_mobile_number'] != trim ( $mobile_number ))) {
		$validate_result = FALSE;
	}
	if ($validate_result && ($_SESSION ['payment_password_code'] != trim ( $form_state ['values'] ['verify_code'] ))) {
			$validate_result = FALSE;
	}
	if (!$validate_result) {
		form_set_error ( '验证码', '您输入的验证码不正确.' );
	}
}

function payment_password_cowpro_customer_profile_payment_password_form_submit($form, &$form_state, &$profile) {
	$profile->password = $form_state['values']['password'];
}

function payment_password_cowpro_customer_profile_payment_password_extra_fields() {
	$result = array(
			'form' => array(
					'name' => array(
							'label' => '支付密码',
							'description' => '支付密码，在用户投标的时候会要求用户输入该密码。',
							'weight' => -9,
					),
			),
			'display' => array(
					'name' => array(
							'label' => '支付密码',
							'description' => '支付密码，在用户投标的时候会要求用户输入该密码。',
							'weight' => -9,
					),
				)
	);

	return $result;
}

/**
 * Implements hook_cowpro_customer_profile_type_info().
 */
function payment_password_cowpro_customer_profile_type_info() {
	$profile_types = array();

	$profile_types['payment_password'] = array(
			'type' => 'payment_password',
			'name' => '支付密码',
			'description' => '支付密码，在用户投标的时候会要求用户输入该密码。',
			'help' => '',
			'weight' => 100,
	);

	return $profile_types;
}

/**
 * Implements hook_form_alter().
 */
function payment_password_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == '_cowpro_issuing_bid_form') {
		$form['password'] = array(
				'#type' => 'textfield',
				'#title' => '支付密码',
				'#description' => '',
				'#maxlength' => 20,
				'#required' => FALSE,
				'#weight' => 20,
		);
		global $user;
		$form['request_new_password'] = array(
				'#markup' => '<div>' . l('重设支付密码', 'user/' . $user->uid . '/customer-profiles/payment_password') . '</div>',
				'#weight' => 30,
		);

		$form['#validate'][] = 'payment_password_form_validate';
	}
}

/**
 * Form validation handler for _cowpro_issuing_bid_form().
 */
function payment_password_form_validate($form, &$form_state) {
	return;
	if ($form_state ['values'] ['op'] === $form_state ['values'] ['submit']) {
		global $user;
		$profile_password = cowpro_customer_profile_load_one_row_with_conditions($user->uid, 'payment_password');
		$password_saved = '';
		if ($profile_password) {
			$password_saved = $profile_password->password;
		}
		$password = $form_state['values']['password'];

		if (!$profile->plaintext) {
			$password = md5($password);
		}

		if ($password != $password_saved) {
			form_set_error('password', '请输入正确的支付密码！');
		}
	}
}

function payment_password_settings_form($form, &$form_state) {
	$form = array ();
	$form ['payment_password_sms_template'] = array (
			'#title' => '手机验证短信模板',
			'#type' => 'textarea',
			'#default_value' => variable_get ( 'payment_password_sms_template', PAYMENT_PASSWORD_SMS_TEMPLATE ),
	);
	$form ['payment_password_sms_template_help'] = array (
			'#markup' => '模板中可用的变量：<br/><b>[site_name]</b> : 网站名称<br/><b>[code]</b> : 验证码',
	);
	$form ['actions'] = array (
			'#type' => 'actions',
	);
	$form ['actions'] ['submit'] = array (
			'#type' => 'submit',
			'#value' => t ( "Save" ),
			'#weight' => 10,
	);
	return system_settings_form ( $form );
}

function payment_password_reset_by_sms_send_code() {
	$uid = $GLOBALS['user']->uid;
	$profile_mobile = cowpro_customer_profile_load_one_row_with_conditions($uid, 'mobile');
	if ($profile_mobile) {
		$mobile_number = $profile_mobile->mobile_number;
	}
	if ($mobile_number) {
		// 4-digit random code
		$code = rand ( pow ( 10, 3 ), pow ( 10, 4 ) - 1 );

		// save code in session
		$_SESSION ['payment_password_code'] = $code;
		$_SESSION ['payment_password_mobile_number'] = $mobile_number;

		// watchdog('debug', "$key code: " . $code);

		$text = variable_get ( 'payment_password_sms_template', PAYMENT_PASSWORD_SMS_TEMPLATE );
		$site_name = variable_get ( 'site_name' );
		$text = str_replace ( '[site:name]', $site_name, $text );
		$text = str_replace ( '[code]', $code, $text );
		$successed = cowpro_message_send ( $mobile_number, $text );

		if ($successed) {
			$response = array (
					'status' => 200,
			);
		} else {
			$response = array (
					'status' => 500,
					'message' => '短消息发送失败，请联系网站管理员.',
			);
		}
	} else {
		$response = array (
				'status' => 200,
				'message' => '请先认证手机号码。',
		);
	}
	drupal_json_output ( $response );
}
